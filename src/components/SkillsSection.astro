---
// SkillsSection.astro
// Data structures for skills categories and progress
import { Icon } from 'astro-icon/components';

const skillCategories = [
  { 
    name: 'Frontend', 
    icon: 'mdi:monitor',
    items: ['HTML/CSS', 'JavaScript', 'Angular', 'React', 'Astro', 'Tailwind CSS', 'Bootstrap'] 
  },
  { 
    name: 'Backend', 
    icon: 'mdi:server',
    items: ['Node.js', 'C#', '.NET Core', 'PHP', 'SQL Server', 'SQLite', 'MySQL'] 
  },
  { 
    name: 'DevOps', 
    icon: 'mdi:refresh-circle',
    items: ['Git', 'Docker', 'CI/CD', 'Vercel', 'XAMPP'] 
  },
  { 
    name: 'Data & BI', 
    icon: 'mdi:database',
    items: ['Power BI', 'SQL Server', 'Entity Framework Core'] 
  },
  { 
    name: 'Mobile', 
    icon: 'mdi:cellphone',
    items: ['Android Studio', 'Java', 'SQLite'] 
  }
];

// Skill proficiency levels
const skillProgress = [
  { name: 'JavaScript', level: 90 },
  { name: 'Angular', level: 85 },
  { name: 'Node.js', level: 80 },
  { name: 'C#', level: 80 },
  { name: '.NET Core', level: 75 },
  { name: 'PHP', level: 70 },
  { name: 'SQL Server', level: 85 },
  { name: 'Power BI', level: 65 }
];

// Helper function to get the appropriate icon for each category
const getCategoryIcon = (categoryName: string) => {
  switch(categoryName) {
    case 'Frontend':
      return `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
              </svg>`;
    case 'Backend':
      return `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12h14M5 12a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v4a2 2 0 01-2 2M5 12a2 2 0 00-2 2v4a2 2 0 002 2h14a2 2 0 002-2v-4a2 2 0 00-2-2m-2-4h.01M17 16h.01" />
              </svg>`;
    case 'DevOps':
      return `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
              </svg>`;
    case 'Data & BI':
      return `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4" />
              </svg>`;
    case 'Mobile':
      return `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 18h.01M8 21h8a2 2 0 002-2V5a2 2 0 00-2-2H8a2 2 0 00-2 2v14a2 2 0 002 2z" />
              </svg>`;
    default:
      return '';
  }
};
---

<div id="skills-component" class="skills-section py-20 w-full block">
  <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
    <!-- Título de sección -->
    <div class="text-center mb-16">
      <h2 data-i18n="skills-title" class="text-4xl font-bold text-gray-800 dark:text-white">
        Mis Habilidades
      </h2>
      <div class="w-24 h-1 bg-emerald-500 mx-auto mt-4"></div>
      <p data-i18n="skills-description" class="mt-4 text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto">
        Herramientas y tecnologías con las que he trabajado para crear soluciones digitales eficientes e innovadoras.
      </p>
    </div>

    <!-- Categorías de habilidades -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-16">
      {skillCategories.map((category) => (
        <div class="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg transform hover:scale-105 transition-transform duration-300 hover:shadow-xl border-t-4 border-emerald-500">
          <div class="flex items-center mb-4">
            <span class="text-emerald-500 mr-3">
              <Icon name={category.icon} class="w-8 h-8" />
            </span>
            <h3 class="text-xl font-semibold text-gray-800 dark:text-white">
              {category.name}
            </h3>
          </div>
          <ul class="space-y-2">
            {category.items.map((item) => (
              <li class="flex items-center text-gray-600 dark:text-gray-300">
                <Icon name="mdi:check-circle" class="text-emerald-500 w-5 h-5 mr-2" />
                <span>{item}</span>
              </li>
            ))}
          </ul>
        </div>
      ))}
    </div>

    <!-- Barras de progreso -->
    <h3 class="text-2xl font-semibold text-gray-800 dark:text-white text-center mb-8">
      Nivel de Experiencia
    </h3>
    <div class="grid grid-cols-1 md:grid-cols-2 gap-x-12 gap-y-6 max-w-4xl mx-auto">
      {skillProgress.map((skill) => (
        <div>
          <div class="flex justify-between mb-1">
            <span class="font-medium text-gray-700 dark:text-gray-200">{skill.name}</span>
            <span class="text-sm text-gray-500 dark:text-gray-400">{skill.level}%</span>
          </div>
          <div class="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2.5">
            <div class="bg-gradient-to-r from-emerald-400 to-blue-500 h-2.5 rounded-full" style={`width: ${skill.level}%`}></div>
          </div>
        </div>
      ))}
    </div>
  </div>
</div>

<style>
  .skills-section {
    display: block !important;
    visibility: visible !important;
    opacity: 1 !important;
  }
</style>

<script>
  // Asegurar que el componente de habilidades sea visible
  document.addEventListener('DOMContentLoaded', function() {
    const skillsComponent = document.getElementById('skills-component');
    if (skillsComponent) {
      skillsComponent.style.display = 'block';
      skillsComponent.style.visibility = 'visible';
      skillsComponent.style.opacity = '1';
    }
  });
</script>