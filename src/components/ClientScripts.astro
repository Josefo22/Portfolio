---
// Componente que maneja scripts del cliente sin interferir con ThemeLanguageSelector
---

<script is:inline>
  // Este script maneja las animaciones y mejoras de UI
  // El cambio de tema e idioma ahora lo maneja ThemeLanguageSelector.astro

  document.addEventListener('DOMContentLoaded', () => {
    setupAnimations();
    fixMobileScrolling();
    
    // Escuchar eventos de cambio de idioma
    window.addEventListener('language-changed', (e) => {
      console.log('Idioma cambiado a:', e.detail.language);
      // Aquí podemos ejecutar código adicional cuando cambia el idioma
    });
  });

  // Función para manejar animaciones y visibilidad
  function setupAnimations() {
    try {
      // Animaciones para el Hero Section
      const fadeElements = document.querySelectorAll('.name-reveal, .gradient-text, .description-fade-in, .buttons-slide-up');
      fadeElements.forEach((el, index) => {
        setTimeout(() => {
          el.style.opacity = "1";
          el.style.transform = "translateY(0)";
        }, 300 * (index + 1));
      });
      
      // Animación de iconos sociales
      const socialIcons = document.querySelectorAll('.social-icon');
      socialIcons.forEach((icon, index) => {
        setTimeout(() => {
          icon.style.opacity = "1";
          icon.style.transform = "scale(1)";
        }, 500 + (100 * index));
      });
      
      // Animación de imagen de perfil
      const profileImage = document.querySelector('.profile-image-reveal');
      if (profileImage) {
        setTimeout(() => {
          profileImage.style.opacity = "1";
          profileImage.style.transform = "scale(1) rotate(0)";
        }, 300);
      }
    } catch (e) {
      console.warn('Error en animaciones:', e);
    }
  }
  
  // Arreglar problemas de scroll y navegación
  function fixMobileScrolling() {
    try {
      // Asegurar que los enlaces suaves funcionen
      document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
          e.preventDefault();
          
          const targetId = this.getAttribute('href');
          const targetElement = document.querySelector(targetId);
          
          if (targetElement) {
            // Scroll suave
            targetElement.scrollIntoView({
              behavior: 'smooth'
            });
            
            // También cerrar el menú móvil si está abierto
            const mobileMenu = document.querySelector('.mobile-menu');
            if (mobileMenu && !mobileMenu.classList.contains('hidden')) {
              mobileMenu.classList.add('hidden');
            }
          }
        });
      });
      
      // Específicamente para dispositivos iOS
      if (/iPad|iPhone|iPod/.test(navigator.userAgent)) {
        // Asegurar que todos los contenedores scrollables tengan la clase necesaria
        document.querySelectorAll('main, section').forEach(el => {
          el.classList.add('ios-momentum-scroll');
        });
      }
    } catch (e) {
      console.warn('Error al configurar scroll móvil:', e);
    }
  }
</script> 