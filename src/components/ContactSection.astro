---
// ContactSection.astro
import { gsap } from 'gsap';
import { ScrollTrigger } from 'gsap/ScrollTrigger';
---

<section id="contact" class="relative py-20 bg-gray-50 dark:bg-gray-800 overflow-hidden">
  <!-- Elementos decorativos de fondo -->
  <div class="absolute inset-0 overflow-hidden opacity-10">
    <div id="particles-contact" class="absolute inset-0"></div>
  </div>
  
  <!-- Círculos decorativos similares al Hero -->
  <div class="absolute -left-32 -bottom-32 w-64 h-64 bg-gradient-to-r from-emerald-400 to-blue-500 rounded-full opacity-10 blur-2xl"></div>
  <div class="absolute -right-32 -top-32 w-80 h-80 bg-gradient-to-r from-blue-400 to-emerald-500 rounded-full opacity-10 blur-2xl"></div>

  <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
    <!-- Heading con animación -->
    <div class="overflow-hidden mb-2 text-center">
      <h2 class="text-3xl font-bold text-gray-800 dark:text-white contact-animate opacity-0" data-i18n="contact-title">Contáctame</h2>
    </div>
    
    <div class="overflow-hidden mb-16 text-center">
      <p class="text-gray-600 dark:text-gray-300 max-w-3xl mx-auto contact-animate opacity-0" data-i18n="contact-description">
        ¿Tienes un proyecto en mente? ¡Hablemos sobre cómo puedo ayudarte a hacerlo realidad! 
        Estoy disponible para trabajos freelance, colaboraciones o simplemente para charlar sobre tecnología.
      </p>
    </div>
    
    <div class="grid md:grid-cols-2 gap-12">
      <!-- Información de contacto -->
      <div class="contact-card-animate opacity-0 transform translate-y-8">
        <div class="bg-white dark:bg-gray-700 rounded-xl shadow-lg p-8 hover:shadow-emerald-100 dark:hover:shadow-emerald-900/20 transition-all duration-300 h-full border border-transparent hover:border-emerald-100 dark:hover:border-emerald-900/30">
          <h3 class="text-xl font-semibold mb-6 text-gray-800 dark:text-white bg-gradient-to-r from-emerald-400 to-blue-500 bg-clip-text text-transparent" data-i18n="contact-info">Información de Contacto</h3>
          
          <div class="space-y-6">
            <div class="flex items-start contact-item-animate opacity-0 transform translate-x-4">
              <div class="flex-shrink-0 p-3 bg-emerald-100 dark:bg-emerald-900/40 rounded-md shadow-sm group-hover:bg-emerald-200 transition-all duration-300">
                <svg class="w-6 h-6 text-emerald-600 dark:text-emerald-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
                </svg>
              </div>
              <div class="ml-4">
                <h4 class="text-sm font-medium text-gray-500 dark:text-gray-400" data-i18n="email-label">Email</h4>
                <a href="mailto:tunombre@email.com" class="text-gray-900 dark:text-white hover:text-emerald-600 dark:hover:text-emerald-400 transition group inline-flex items-center">
                  Josefovelez22@email.com
                  <svg class="w-4 h-4 ml-1 opacity-0 -translate-x-2 group-hover:opacity-100 group-hover:translate-x-0 transition-all duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3"></path>
                  </svg>
                </a>
              </div>
            </div>
            
            <div class="flex items-start contact-item-animate opacity-0 transform translate-x-4">
              <div class="flex-shrink-0 p-3 bg-emerald-100 dark:bg-emerald-900/40 rounded-md shadow-sm group-hover:bg-emerald-200 transition-all duration-300">
                <svg class="w-6 h-6 text-emerald-600 dark:text-emerald-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
                </svg>
              </div>
              <div class="ml-4">
                <h4 class="text-sm font-medium text-gray-500 dark:text-gray-400" data-i18n="phone">Teléfono</h4>
                <a href="tel:+123456789" class="text-gray-900 dark:text-white hover:text-emerald-600 dark:hover:text-emerald-400 transition group inline-flex items-center">
                  +57 302 289 1386
                  <svg class="w-4 h-4 ml-1 opacity-0 -translate-x-2 group-hover:opacity-100 group-hover:translate-x-0 transition-all duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3"></path>
                  </svg>
                </a>
              </div>
            </div>
            
            <div class="flex items-start contact-item-animate opacity-0 transform translate-x-4">
              <div class="flex-shrink-0 p-3 bg-emerald-100 dark:bg-emerald-900/40 rounded-md shadow-sm group-hover:bg-emerald-200 transition-all duration-300">
                <svg class="w-6 h-6 text-emerald-600 dark:text-emerald-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                </svg>
              </div>
              <div class="ml-4">
                <h4 class="text-sm font-medium text-gray-500 dark:text-gray-400" data-i18n="location">Ubicación</h4>
                <p class="text-gray-900 dark:text-white">Medellin, Colombia</p>
              </div>
            </div>
          </div>
          
          <div class="mt-12">
            <h3 class="text-xl font-semibold mb-6 text-gray-800 dark:text-white bg-gradient-to-r from-emerald-400 to-blue-500 bg-clip-text text-transparent" data-i18n="follow-me">Sígueme</h3>
            
            <div class="flex space-x-4 contact-social-animate opacity-0">
              <a href="#" class="social-icon p-3 bg-gray-100 dark:bg-gray-600 rounded-full text-gray-600 dark:text-gray-300 hover:bg-emerald-500 hover:text-white hover:scale-110 transition-all duration-300 shadow-sm">
                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path d="M22.675 0h-21.35c-.732 0-1.325.593-1.325 1.325v21.351c0 .731.593 1.324 1.325 1.324h11.495v-9.294h-3.128v-3.622h3.128v-2.671c0-3.1 1.893-4.788 4.659-4.788 1.325 0 2.463.099 2.795.143v3.24l-1.918.001c-1.504 0-1.795.715-1.795 1.763v2.313h3.587l-.467 3.622h-3.12v9.293h6.116c.73 0 1.323-.593 1.323-1.325v-21.35c0-.732-.593-1.325-1.325-1.325z"/>
                </svg>
              </a>
              <a href="#" class="social-icon p-3 bg-gray-100 dark:bg-gray-600 rounded-full text-gray-600 dark:text-gray-300 hover:bg-emerald-500 hover:text-white hover:scale-110 transition-all duration-300 shadow-sm">
                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path d="M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm6.066 9.645c.183 4.04-2.83 8.544-8.164 8.544-1.622 0-3.131-.476-4.402-1.291 1.524.18 3.045-.244 4.252-1.189-1.256-.023-2.317-.854-2.684-1.995.451.086.895.061 1.298-.049-1.381-.278-2.335-1.522-2.304-2.853.388.215.83.344 1.301.359-1.279-.855-1.641-2.544-.889-3.835 1.416 1.738 3.533 2.881 5.92 3.001-.419-1.796.944-3.527 2.799-3.527.825 0 1.572.349 2.096.907.654-.128 1.27-.368 1.824-.697-.215.671-.67 1.233-1.263 1.589.581-.07 1.135-.224 1.649-.453-.384.578-.87 1.084-1.433 1.489z"/>
                </svg>
              </a>
              <a href="#" class="social-icon p-3 bg-gray-100 dark:bg-gray-600 rounded-full text-gray-600 dark:text-gray-300 hover:bg-emerald-500 hover:text-white hover:scale-110 transition-all duration-300 shadow-sm">
                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path d="M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm-2 16h-2v-6h2v6zm-1-6.891c-.607 0-1.1-.496-1.1-1.109 0-.612.492-1.109 1.1-1.109s1.1.497 1.1 1.109c0 .613-.493 1.109-1.1 1.109zm8 6.891h-1.998v-2.861c0-1.881-2.002-1.722-2.002 0v2.861h-2v-6h2v1.093c.872-1.616 4-1.736 4 1.548v3.359z"/>
                </svg>
              </a>
              <a href="#" class="social-icon p-3 bg-gray-100 dark:bg-gray-600 rounded-full text-gray-600 dark:text-gray-300 hover:bg-emerald-500 hover:text-white hover:scale-110 transition-all duration-300 shadow-sm">
                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                </svg>
              </a>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Formulario de contacto -->
      <div class="contact-card-animate opacity-0 transform translate-y-8">
        <div class="bg-white dark:bg-gray-700 rounded-xl shadow-lg p-8 hover:shadow-emerald-100 dark:hover:shadow-emerald-900/20 transition-all duration-300 h-full border border-transparent hover:border-emerald-100 dark:hover:border-emerald-900/30">
          <h3 class="text-xl font-semibold mb-6 text-gray-800 dark:text-white bg-gradient-to-r from-emerald-400 to-blue-500 bg-clip-text text-transparent" data-i18n="send-message">Envíame un mensaje</h3>
          
          <form id="contact-form" class="space-y-6">
            <div class="grid md:grid-cols-2 gap-6">
              <div class="form-group">
                <label for="name" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1" data-i18n="name">Nombre</label>
                <div class="relative">
                  <input 
                    type="text" 
                    id="name" 
                    name="name" 
                    class="w-full px-4 py-3 pl-10 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-2 focus:ring-emerald-500 focus:border-transparent dark:bg-gray-800 dark:text-white transition-all duration-300"
                    required
                  />
                  <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none text-gray-400">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                    </svg>
                  </div>
                </div>
              </div>
              <div class="form-group">
                <label for="email" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1" data-i18n="email">Email</label>
                <div class="relative">
                  <input 
                    type="email" 
                    id="email" 
                    name="email" 
                    class="w-full px-4 py-3 pl-10 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-2 focus:ring-emerald-500 focus:border-transparent dark:bg-gray-800 dark:text-white transition-all duration-300"
                    required
                  />
                  <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none text-gray-400">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
                    </svg>
                  </div>
                </div>
              </div>
            </div>
            
            <div class="form-group">
              <label for="subject" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1" data-i18n="subject">Asunto</label>
              <div class="relative">
                <input 
                  type="text" 
                  id="subject" 
                  name="subject" 
                  class="w-full px-4 py-3 pl-10 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-2 focus:ring-emerald-500 focus:border-transparent dark:bg-gray-800 dark:text-white transition-all duration-300"
                  required
                />
                <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none text-gray-400">
                  <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                  </svg>
                </div>
              </div>
            </div>
            
            <div class="form-group">
              <label for="message" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1" data-i18n="message">Mensaje</label>
              <div class="relative">
                <textarea 
                  id="message" 
                  name="message" 
                  rows="5" 
                  class="w-full px-4 py-3 pl-10 border border-gray-300 dark:border-gray-600 rounded-md focus:ring-2 focus:ring-emerald-500 focus:border-transparent dark:bg-gray-800 dark:text-white transition-all duration-300"
                  required
                ></textarea>
                <div class="absolute top-3 left-0 flex items-start pl-3 pointer-events-none text-gray-400">
                  <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z"></path>
                  </svg>
                </div>
              </div>
            </div>
            
            <button 
              type="submit" 
              class="group relative w-full px-6 py-3 bg-gradient-to-r from-emerald-600 to-blue-600 text-white font-medium rounded-md hover:from-emerald-700 hover:to-blue-700 transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:ring-offset-2 overflow-hidden"
            >
              <span class="absolute right-0 inset-y-0 flex items-center pr-3 opacity-0 group-hover:opacity-100 transform translate-x-4 group-hover:translate-x-0 transition-all duration-300">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 5l7 7-7 7M5 5l7 7-7 7"></path>
                </svg>
              </span>
              <span class="group-hover:pr-8 transition-all duration-300" data-i18n="send">Enviar Mensaje</span>
            </button>
            
            <!-- Indicador de estado del formulario (oculto por defecto) -->
            <div id="form-status" class="mt-4 text-center hidden">
              <div id="form-success" class="text-emerald-600 dark:text-emerald-400 hidden">
                <svg class="w-6 h-6 inline-block mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
                <span data-i18n="success">¡Mensaje enviado correctamente!</span>
              </div>
              <div id="form-error" class="text-red-600 dark:text-red-400 hidden">
                <svg class="w-6 h-6 inline-block mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
                <span data-i18n="error">Ha ocurrido un error. Inténtalo de nuevo.</span>
              </div>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  import { gsap } from 'gsap';
  import { ScrollTrigger } from 'gsap/ScrollTrigger';
  
  // Registra plugins de GSAP
  gsap.registerPlugin(ScrollTrigger);

  // Cargar particles.js dinámicamente para la sección de contacto
  const loadContactParticles = async () => {
    try {
      const particlesJS = (await import('particles.js')).default;
      
      if (particlesJS) {
        particlesJS('particles-contact', {
          particles: {
            number: {
              value: 40,
              density: {
                enable: true,
                value_area: 800
              }
            },
            color: {
              value: '#10b981'
            },
            shape: {
              type: 'circle',
              stroke: {
                width: 0,
                color: '#000000'
              },
              polygon: {
                nb_sides: 5
              }
            },
            opacity: {
              value: 0.3,
              random: true,
              anim: {
                enable: false,
                speed: 1,
                opacity_min: 0.1,
                sync: false
              }
            },
            size: {
              value: 3,
              random: true,
              anim: {
                enable: false,
                speed: 40,
                size_min: 0.1,
                sync: false
              }
            },
            line_linked: {
              enable: true,
              distance: 150,
              color: '#10b981',
              opacity: 0.2,
              width: 1
            },
            move: {
              enable: true,
              speed: 1,
              direction: 'none',
              random: false,
              straight: false,
              out_mode: 'out',
              bounce: false,
              attract: {
                enable: false,
                rotateX: 600,
                rotateY: 1200
              }
            }
          },
          interactivity: {
            detect_on: 'canvas',
            events: {
              onhover: {
                enable: true,
                mode: 'grab'
              },
              onclick: {
                enable: true,
                mode: 'push'
              },
              resize: true
            },
            modes: {
              grab: {
                distance: 140,
                line_linked: {
                  opacity: 0.5
                }
              },
              bubble: {
                distance: 400,
                size: 40,
                duration: 2,
                opacity: 0.8,
                speed: 3
              },
              repulse: {
                distance: 200,
                duration: 0.4
              },
              push: {
                particles_nb: 2
              },
              remove: {
                particles_nb: 2
              }
            }
          },
          retina_detect: true
        });
      }
    } catch (error) {
      console.error('Error al cargar particles.js para la sección de contacto:', error);
    }
  };

  // Animaciones al hacer scroll para la sección de contacto
  const initContactAnimations = () => {
    // Animación del título y subtítulo
    const contactElements = gsap.utils.toArray<HTMLElement>('.contact-animate');
    contactElements.forEach((element, index) => {
      gsap.to(element, {
        scrollTrigger: {
          trigger: element,
          start: 'top 90%',
          toggleActions: 'play none none none'
        },
        opacity: 1,
        y: 0,
        duration: 0.8,
        delay: index * 0.2,
        ease: 'power2.out'
      });
    });

    // Animación de las tarjetas
    const contactCards = gsap.utils.toArray<HTMLElement>('.contact-card-animate');
    contactCards.forEach((card, index) => {
      gsap.to(card, {
        scrollTrigger: {
          trigger: card,
          start: 'top 85%',
          toggleActions: 'play none none none'
        },
        opacity: 1,
        y: 0,
        duration: 0.8,
        delay: 0.3 + (index * 0.2),
        ease: 'power2.out'
      });
    });

    // Animación de los items de contacto
    const contactItems = gsap.utils.toArray<HTMLElement>('.contact-item-animate');
    contactItems.forEach((item, index) => {
      gsap.to(item, {
        scrollTrigger: {
          trigger: item,
          start: 'top 85%',
          toggleActions: 'play none none none'
        },
        opacity: 1,
        x: 0,
        duration: 0.6,
        delay: 0.6 + (index * 0.15),
        ease: 'power2.out'
      });
    });

    // Animación de los iconos sociales
    gsap.to('.contact-social-animate', {
      scrollTrigger: {
        trigger: '.contact-social-animate',
        start: 'top 85%',
        toggleActions: 'play none none none'
      },
      opacity: 1,
      duration: 0.8,
      delay: 1,
      ease: 'power2.out',
      onComplete: () => {
        // Animación de los iconos sociales uno por uno
        const socialIcons = gsap.utils.toArray<HTMLElement>('.social-icon');
        socialIcons.forEach((icon, index) => {
          gsap.from(icon, {
            scale: 0.5,
            opacity: 0,
            duration: 0.4,
            delay: index * 0.1,
            ease: 'back.out(1.7)'
          });
        });
      }
    });
  };

  // Lógica para el envío del formulario
  const setupContactForm = () => {
    const form = document.getElementById('contact-form') as HTMLFormElement;
    const formStatus = document.getElementById('form-status');
    const formSuccess = document.getElementById('form-success');
    const formError = document.getElementById('form-error');

    if (form && formStatus && formSuccess && formError) {
      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        // Recolectar datos del formulario
        const formData = new FormData(form);
        const formDataObj: Record<string, string> = {};
        formData.forEach((value, key) => {
          formDataObj[key] = value.toString();
        });
        
        try {
          // Simular una respuesta exitosa (reemplazar con tu lógica real)
          const simulateRequest = () => {
            return new Promise<{ ok: boolean }>((resolve) => {
              setTimeout(() => {
                resolve({ ok: true });
              }, 1500);
            });
          };
          
          const response = await simulateRequest();
          
          // Mostrar mensaje de éxito
          if (response.ok) {
            formStatus.classList.remove('hidden');
            formSuccess.classList.remove('hidden');
            formError.classList.add('hidden');
            
            // Resetear el formulario
            form.reset();
            
            // Ocultar el mensaje después de 5 segundos
            setTimeout(() => {
              formStatus.classList.add('hidden');
              formSuccess.classList.add('hidden');
            }, 5000);
          } else {
            throw new Error('Error al enviar el formulario');
          }
        } catch (error) {
          console.error('Error en el envío del formulario:', error);
          
          // Mostrar mensaje de error
          formStatus.classList.remove('hidden');
          formSuccess.classList.add('hidden');
          formError.classList.remove('hidden');
          
          // Ocultar el mensaje después de 5 segundos
          setTimeout(() => {
            formStatus.classList.add('hidden');
            formError.classList.add('hidden');
          }, 5000);
        }
      });
    }
  };

  // Inicializar todo cuando el documento esté listo
  document.addEventListener('DOMContentLoaded', () => {
    loadContactParticles();
    initContactAnimations();
    setupContactForm();
  });
</script>

    